{"version":3,"sources":["components/Loader.jsx","components/Auth.jsx","components/SearchForm.jsx","components/Lots.jsx","components/scrollTo.jsx","App.jsx","index.js"],"names":["Loader","isLoading","className","loading","color","Auth","state","email","password","handleChenge","target","value","id","setState","handleSubmit","e","preventDefault","firebase","auth","signInWithEmailAndPassword","then","props","hasAccount","catch","error","alert","message","this","onSubmit","autoComplete","type","placeholder","onChange","React","Component","SearchForm","lots","getLots","useState","minDateSt","setMinDate","maxDateSt","setMaxDate","useEffect","today","Date","getFullYear","getMonth","slice","getDate","sumStartSt","setSumStart","sumEndSt","setSumrEnd","selSt","setSelect","activLots","setActivLots","foundLotsActiv","filter","arr","lot_status","split","join","includes","length","foundLots","setFoundLots","name","min","max","onClick","minDate","Number","replace","maxDate","minSum","maxSum","select","console","log","filterSum","lot","date_publication","reverse","expected_cost","filterLots","filterLotsActiv","Lots","lotsSt","setLots","filteredLots","map","organizer","winner","status_proc","buy_proc","https","data-id","href","rel","scrollTo","window","top","document","documentElement","scrollHeight","behavior","App","account","database","ref","on","elem","val","scroll","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90df2864.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\nconst Loader = (isLoading) => {\n  return (\n    <div className=\"loaderDiv\">\n      <PropagateLoader loading={isLoading} color={\"red\"} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport Loader from \"./Loader\";\n\nclass Auth extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isLoading: false,\n  };\n\n  handleChenge = ({ target: { value, id } }) => {\n    this.setState({ [id]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n\n    // ========= Registration\n    // firebase\n    //   .auth()\n    //   .createUserWithEmailAndPassword(email, password)\n    //   .then((response) => console.log(`registration successful`, response))\n    //   .catch((error) => console.log(error.message));\n\n    // ========= signIn\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(this.setState({ isLoading: true }))\n      // .then((response) => alert(`Success ${this.state.email}!`, response))\n      .then(() => {\n        this.props.hasAccount();\n      })\n      .catch((error) => {\n        alert(error.message);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <>\n        <div className=\"flex_block\">\n          <h1>Увійти</h1>\n          <h2 className=\"text\">Введіть свою пошту та пароль</h2>\n\n          <form\n            className=\"flex_block\"\n            onSubmit={this.handleSubmit}\n            autoComplete=\"off\"\n          >\n            <label className=\"flex_block\">\n              Пошта\n              <input\n                type=\"text\"\n                id=\"email\"\n                placeholder=\"email\"\n                onChange={this.handleChenge}\n              />\n            </label>\n\n            <label className=\"flex_block\">\n              Пароль\n              <input\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"password\"\n                onChange={this.handleChenge}\n              />\n            </label>\n\n            <button className=\"btn\" type=\"submit\">\n              Надіслати\n            </button>\n          </form>\n        </div>\n\n        {isLoading && <Loader isLoading={isLoading} />}\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function SearchForm({ lots, getLots }) {\n  const [minDateSt, setMinDate] = useState(\"2020-01-01\");\n  const updateMinDate = (e) => {\n    setMinDate(e.target.value);\n  };\n\n  const [maxDateSt, setMaxDate] = useState(\"2040-12-31\");\n  const updateMaxDate = (e) => {\n    setMaxDate(e.target.value);\n  };\n  // Поточна дата\n  useEffect(() => {\n    var today =\n      new Date().getFullYear() +\n      \"-\" +\n      (\"0\" + (new Date().getMonth() + 1)).slice(-2) +\n      \"-\" +\n      (\"0\" + new Date().getDate()).slice(-2);\n    setMaxDate(today);\n  }, [lots]);\n\n  const [sumStartSt, setSumStart] = useState(\"0\");\n  const updateSumStart = (e) => {\n    setSumStart(e.target.value);\n  };\n\n  const [sumEndSt, setSumrEnd] = useState(\"1000000000\");\n  const updateSumrEnd = (e) => {\n    setSumrEnd(e.target.value);\n  };\n\n  const [selSt, setSelect] = useState(\"Всі статуси\");\n  const updateSelect = (e) => {\n    setSelect(e.target.value);\n  };\n  const [activLots, setActivLots] = useState(\"\");\n  useEffect(() => {\n    const foundLotsActiv = lots.filter((arr) =>\n      arr.lot_status.split(\" \").join(\"\").includes(\"Активний\")\n    );\n    setActivLots(foundLotsActiv.length);\n  }, [lots]);\n\n  const [foundLots, setFoundLots] = useState(\"\");\n  useEffect(() => {\n    setFoundLots(lots.length);\n  }, [lots]);\n\n  const startSearch = () => {\n    const minDate = Number(minDateSt.replace(/-/, \"\").replace(/-/, \"\"));\n    const maxDate = Number(maxDateSt.replace(/-/, \"\").replace(/-/, \"\"));\n    const minSum = Number(sumStartSt);\n    const maxSum = Number(sumEndSt);\n    const select = selSt;\n\n    console.log(minDate, maxDate, minSum, maxSum, select);\n    console.log(lots);\n\n    // Фільтр по даті\n    const filterDate = lots.filter(\n      (lot) =>\n        Number(lot.date_publication.split(\".\").reverse().join(\"\")) <= maxDate &&\n        Number(lot.date_publication.split(\".\").reverse().join(\"\")) >= minDate\n    );\n    // console.log(\"Фильтр по даті:\", filterDate.length);\n\n    // Фільтр по сумі та даті\n    const filterSum = filterDate.filter(\n      (arr) =>\n        Number(\n          arr.expected_cost\n            .split(\"\")\n            .join(\"\")\n            .replace(/\\s+/g, \"\")\n            .replace(/,/, \".\")\n        ) <= maxSum &&\n        Number(\n          arr.expected_cost\n            .split(\"\")\n            .join(\"\")\n            .replace(/\\s+/g, \"\")\n            .replace(/,/, \".\")\n        ) >= minSum\n    );\n    // console.log(\"Фильтр по даті та сумі:\", filterSum.length);\n\n    // Фільтер по статусу\n    if (select !== \"Всі статуси\") {\n      const filterLots = filterSum.filter((arr) =>\n        arr.lot_status.split(\" \").join(\"\").includes(select)\n      );\n\n      getLots(filterLots);\n      setFoundLots(filterLots.length);\n      // console.log(`За параметрами пошуку: \"${select}\": ${filterLots.length}`);\n    } else {\n      getLots(filterSum);\n      setFoundLots(filterSum.length);\n      // console.log(`За параметрами пошуку: \"${select}\": ${filterSum.length}`);\n    }\n\n    // Кількість Активних лотів\n    const filterLotsActiv = filterSum.filter((arr) =>\n      arr.lot_status.split(\" \").join(\"\").includes(\"Активний\")\n    );\n    setActivLots(filterLotsActiv.length);\n    // console.log(`Активних лотів: ${filterLotsActiv.length}`);\n  };\n\n  return (\n    <>\n      <section className=\"selection\">\n        <div className=\"form_conteiner\">\n          <ul className=\"form-list\">\n            <li className=\"form-item\">\n              <label className=\"form-field\">\n                <input\n                  className=\"input_date\"\n                  type=\"date\"\n                  id=\"date_start\"\n                  name=\"date-start\"\n                  value={minDateSt}\n                  min=\"2020-01-01\"\n                  max=\"2040-12-31\"\n                  onChange={updateMinDate}\n                />\n                <input\n                  className=\"input_date\"\n                  type=\"date\"\n                  id=\"date_end\"\n                  name=\"date-end\"\n                  value={maxDateSt}\n                  min=\"2020-01-01\"\n                  max=\"2040-12-31\"\n                  onChange={updateMaxDate}\n                />\n              </label>\n            </li>\n            <li className=\"form-item\">\n              <label className=\"form-field\">\n                <select\n                  className=\"select_sum\"\n                  id=\"select-start\"\n                  onChange={updateSumStart}\n                >\n                  <option value=\"0\">0</option>\n                  <option value=\"100\">100</option>\n                  <option value=\"1000\">1000</option>\n                  <option value=\"10000\">10000</option>\n                  <option value=\"100000\">100000</option>\n                  <option value=\"1000000\">1000000</option>\n                  <option value=\"10000000\">10000000</option>\n                  <option value=\"100000000\">100000000</option>\n                </select>\n                <select\n                  className=\"select_sum\"\n                  id=\"select-end\"\n                  onChange={updateSumrEnd}\n                >\n                  <option value=\"1000000000\">1000000000</option>\n                  <option value=\"100000000\">100000000</option>\n                  <option value=\"10000000\">10000000</option>\n                  <option value=\"1000000\">1000000</option>\n                  <option value=\"100000\">100000</option>\n                  <option value=\"100000\">100000</option>\n                  <option value=\"10000\">10000</option>\n                </select>\n                <span className=\"form-label\"></span>\n              </label>\n            </li>\n            <li>\n              <form\n                className=\"search-form\"\n                id=\"search-form\"\n                onChange={updateSelect}\n              >\n                <select className=\"select\" id=\"select\">\n                  <option value=\"Всі статуси\">Всі статуси закупівлі</option>\n                  <option value=\"Активний\">Активний лот закупівлі</option>\n                  <option value=\"Завершено\">Завершено лот закупівлі</option>\n                  <option value=\"Неуспішний\">Неуспішний лот закупівлі</option>\n                  <option value=\"Скасовано\">Скасовано лот закупівлі</option>\n                </select>\n              </form>\n            </li>\n          </ul>\n\n          <button\n            className=\"load-more-button is-hidden\"\n            type=\"button\"\n            onClick={startSearch}\n          >\n            Пошук\n          </button>\n        </div>\n      </section>\n      <div className=\"result-div\">\n        <h3 className=\"result\">Всього лотів в системі: {lots.length}</h3>\n        <h3 className=\"result\">Активних лотів: {activLots}</h3>\n        <h3 className=\"result\">Знайдено за параметрами пошуку: {foundLots}</h3>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"./SearchForm\";\n\nexport default function Lots({ lots }) {\n  const [lotsSt, setLots] = useState([]);\n  useEffect(() => {\n    setLots(lots);\n  }, [lots]);\n\n  const getLots = (filteredLots) => {\n    setLots(filteredLots);\n    console.log(\"filteredLots>\", filteredLots);\n  };\n\n  return (\n    <>\n      {!lots ? (\n        <h2 className=\"message\">\n          Не знайдено лотів, спробуйте будь ласка пізніше\n        </h2>\n      ) : (\n        <>\n          {<SearchForm lots={lots} getLots={getLots} />}\n          <div>\n            {/* Lots */}\n            <section>\n              <table className=\"table gallery js-gallery\">\n                <thead className=\"gallery__item table_title\">\n                  <tr>\n                    <th>Дата</th>\n                    <th>Лот</th>\n                    <th>Очікувана вартість</th>\n                    <th>Організатор</th>\n                    <th>Переможець</th>\n                    <th>Статус лота</th>\n                    <th>Статус процедури</th>\n                    <th>Процедура закупівлі</th>\n                    <th>Посилання</th>\n                  </tr>\n                </thead>\n\n                {lotsSt.map(\n                  ({\n                    id,\n                    date_publication,\n                    lot,\n                    expected_cost,\n                    organizer,\n                    winner,\n                    lot_status,\n                    status_proc,\n                    buy_proc,\n                    https,\n                  }) => (\n                    <thead className=\"gallery_lot\" key={id}>\n                      <tr data-id={id}>\n                        <th> {date_publication}</th>\n                        <th> {lot}</th>\n                        <th> {expected_cost}</th>\n                        <th> {organizer}</th>\n                        <th> {winner}</th>\n                        <th> {lot_status}</th>\n                        <th> {status_proc}</th>\n                        <th> {buy_proc}</th>\n                        <th>\n                          <a href={https} target=\"_blank\" rel=\"noreferrer\">\n                            <span className=\"lot_link\">Лот</span>\n                          </a>\n                        </th>\n                      </tr>\n                    </thead>\n                  )\n                )}\n              </table>\n            </section>\n          </div>\n\n          {/* Cкролл вверх страницы */}\n          <a className=\"toTopBtn\" href=\"/#\" id=\"toTop\">\n            <div className=\"icon\">&#8593;</div>\n          </a>\n        </>\n      )}\n    </>\n  );\n}\n","const scrollTo = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: \"smooth\",\n  });\n};\n\nexport default scrollTo;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport Authorisetion from \"./components/Auth\";\nimport Lots from \"./components/Lots\";\nimport scrollTo from \"./components/scrollTo\";\n\nexport default class App extends React.Component {\n  state = {\n    account: false,\n    lots: [],\n  };\n\n  componentDidMount() {\n    const db = firebase.database();\n\n    const lots = db.ref(\"lots\");\n    lots.on(\"value\", (elem) => {\n      this.setState({ lots: elem.val() });\n      console.log(this.state.lots);\n    });\n  }\n\n  hasAccount = () => {\n    this.setState({ account: true });\n  };\n\n  render() {\n    const { account, lots } = this.state;\n\n    return (\n      <div>\n        {/* Get Lots */}\n        {account && <Lots lots={lots} scroll={scrollTo()} />}\n\n        {/* Authorisetion */}\n        {!account && <Authorisetion hasAccount={this.hasAccount} />}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App.jsx\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAEz2Evg5Hiks9Aj002yIBBg6saiZJwZ1s\",\n  authDomain: \"mz-step.firebaseapp.com\",\n  databaseURL: \"https://mz-step-default-rtdb.firebaseio.com\",\n  projectId: \"mz-step\",\n  storageBucket: \"mz-step.appspot.com\",\n  messagingSenderId: \"567590342714\",\n  appId: \"1:567590342714:web:0ec469448dcfa2e760a503\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}